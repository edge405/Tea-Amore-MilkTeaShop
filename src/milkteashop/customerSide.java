/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package milkteashop;

import java.awt.Color;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Userx`
 */
public class customerSide extends javax.swing.JFrame {

    /**
     * Creates new form customerSide
     */
    private Receipt receiptFrame;
    private EnterCash cashEnterFrame;
    private Menu menuFrame; // Declare menuFrame at the class level
    
    String milkTeaName = "", sugarLevelPercent = "", sizeName = "", addOnsName = "";
    Connection con;
    private ButtonGroup buttonGroup;

    ImageScaler imageScaler = new ImageScaler();

    public customerSide() {
        initComponents();
            
        //stretchImage();
        enableTextField(false);
        scalerIMGBtngrp();
        //createConnection();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        lblBackground = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        lblTaro = new javax.swing.JLabel();
        lblbrownSugar = new javax.swing.JLabel();
        lblMango = new javax.swing.JLabel();
        lblHoneydrew = new javax.swing.JLabel();
        lblMatcha = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnBuy = new javax.swing.JButton();
        cboxSugarLevel = new javax.swing.JComboBox<>();
        rbBrownSugar = new javax.swing.JRadioButton();
        rbTaro = new javax.swing.JRadioButton();
        rbMango = new javax.swing.JRadioButton();
        rbHoneydew = new javax.swing.JRadioButton();
        rbMatcha = new javax.swing.JRadioButton();
        lblBSmt = new javax.swing.JLabel();
        lblTaroMt = new javax.swing.JLabel();
        lblMangomt = new javax.swing.JLabel();
        lblHonydewMt = new javax.swing.JLabel();
        lblMatchaMt = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cboxSize = new javax.swing.JComboBox<>();
        btnMenu = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cboxAddOns = new javax.swing.JComboBox<>();
        spinnerQuantity = new javax.swing.JSpinner();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBackground.setBackground(new java.awt.Color(255, 204, 204));
        lblBackground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnBack.setBackground(new java.awt.Color(220, 220, 220));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTaro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MilkTeaImages/Taro Milk Tea.png"))); // NOI18N
        lblTaro.setText("Taro");

        lblbrownSugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MilkTeaImages/brow sugar milk tea.png"))); // NOI18N
        lblbrownSugar.setText("Brown Sugar");

        lblMango.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MilkTeaImages/mangoMilkTea.png"))); // NOI18N
        lblMango.setText("Mango");

        lblHoneydrew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MilkTeaImages/honeydew.png"))); // NOI18N
        lblHoneydrew.setText("Honeydew");

        lblMatcha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MilkTeaImages/matcha.png"))); // NOI18N
        lblMatcha.setText("Matcha");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Name :");

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Sugar Level :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Quantity :");

        btnBuy.setBackground(new java.awt.Color(220, 220, 220));
        btnBuy.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        btnBuy.setText("Buy");
        btnBuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuyMouseExited(evt);
            }
        });
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        cboxSugarLevel.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        cboxSugarLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0 %", "25 %", "50 %", "75 %", "100 %" }));

        rbBrownSugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBrownSugarActionPerformed(evt);
            }
        });

        rbTaro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTaroActionPerformed(evt);
            }
        });

        rbMango.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMangoActionPerformed(evt);
            }
        });

        rbHoneydew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbHoneydewActionPerformed(evt);
            }
        });

        rbMatcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMatchaActionPerformed(evt);
            }
        });

        lblBSmt.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        lblBSmt.setText("Brown Sugar Milk Tea");

        lblTaroMt.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        lblTaroMt.setText("Taro Milk Tea");

        lblMangomt.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblMangomt.setText("Mango Milk Tea");

        lblHonydewMt.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblHonydewMt.setText("Honeydew Milk Tea");

        lblMatchaMt.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblMatchaMt.setText("Matcha Milk Tea");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Size :");

        cboxSize.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        cboxSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Regular", "Medium", "Large" }));

        btnMenu.setBackground(new java.awt.Color(220, 220, 220));
        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Add ons :");

        cboxAddOns.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        cboxAddOns.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Pearls/Tapioca", "Crushed Oreo", "Nata de coco", "Chocolate Pudding", "Coconut Jelly" }));

        spinnerQuantity.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout lblBackgroundLayout = new javax.swing.GroupLayout(lblBackground);
        lblBackground.setLayout(lblBackgroundLayout);
        lblBackgroundLayout.setHorizontalGroup(
            lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblBackgroundLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(rbBrownSugar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbTaro)
                .addGap(186, 186, 186))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblBackgroundLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblBackgroundLayout.createSequentialGroup()
                        .addGap(564, 564, 564)
                        .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                        .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, lblBackgroundLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, lblBackgroundLayout.createSequentialGroup()
                                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(cboxSugarLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(48, 48, 48)
                        .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(lblBackgroundLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lblBackgroundLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cboxAddOns, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
            .addGroup(lblBackgroundLayout.createSequentialGroup()
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                        .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lblBackgroundLayout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(lblbrownSugar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lblBackgroundLayout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(lblBSmt)))
                        .addGap(167, 167, 167)
                        .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTaro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTaroMt)))
                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMenu))
                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(lblBackgroundLayout.createSequentialGroup()
                                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMangomt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(rbMango)))
                                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                                        .addGap(209, 209, 209)
                                        .addComponent(rbHoneydew))
                                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                                        .addGap(147, 147, 147)
                                        .addComponent(lblHonydewMt)))
                                .addGap(12, 12, 12)
                                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(lblBackgroundLayout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(lblMatchaMt))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblBackgroundLayout.createSequentialGroup()
                                        .addComponent(rbMatcha)
                                        .addGap(55, 55, 55))))
                            .addGroup(lblBackgroundLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMango, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(155, 155, 155)
                                .addComponent(lblHoneydrew, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134)
                                .addComponent(lblMatcha, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        lblBackgroundLayout.setVerticalGroup(
            lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaro, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblbrownSugar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaroMt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBSmt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbBrownSugar)
                    .addComponent(rbTaro))
                .addGap(18, 18, 18)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMango, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMatcha, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(lblHoneydrew, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHonydewMt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMangomt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMatchaMt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rbMatcha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbMango, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbHoneydew))
                .addGap(34, 34, 34)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxSugarLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxAddOns, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(lblBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        toBuy();
    }//GEN-LAST:event_btnBuyActionPerformed

    private void rbBrownSugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBrownSugarActionPerformed
        enableTextField(true);
    }//GEN-LAST:event_rbBrownSugarActionPerformed

    private void rbTaroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTaroActionPerformed
        enableTextField(true);
    }//GEN-LAST:event_rbTaroActionPerformed

    private void rbMangoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMangoActionPerformed
        enableTextField(true);
    }//GEN-LAST:event_rbMangoActionPerformed

    private void rbHoneydewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbHoneydewActionPerformed
        enableTextField(true);
    }//GEN-LAST:event_rbHoneydewActionPerformed

    private void rbMatchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMatchaActionPerformed
        enableTextField(true);
    }//GEN-LAST:event_rbMatchaActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed

        if (menuFrame == null) {
        menuFrame = new Menu();
        menuFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    if (!menuFrame.isVisible()) {
        menuFrame.setVisible(true);
    }
        
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new Choose().show();
        
        dispose();
                if (menuFrame == null) {
        menuFrame = new Menu();
        menuFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
        
            if (menuFrame.isVisible()) {
        menuFrame.setVisible(false);
    }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBuyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuyMouseEntered
        
        String name = txtName.getText();
        int quantity = (int) spinnerQuantity.getValue();

        if (name.trim().equals("")) {
            btnBuy.setBackground(Color.RED);
            } else {
            if( quantity <= 0){
                btnBuy.setBackground(Color.RED);
            } else {
                btnBuy.setBackground(Color.GREEN);
            }
        }
    }//GEN-LAST:event_btnBuyMouseEntered

    private void btnBuyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuyMouseExited
        btnBuy.setBackground(new Color(220, 220, 220));
    }//GEN-LAST:event_btnBuyMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customerSide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnMenu;
    private javax.swing.JComboBox<String> cboxAddOns;
    private javax.swing.JComboBox<String> cboxSize;
    private javax.swing.JComboBox<String> cboxSugarLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblBSmt;
    private javax.swing.JPanel lblBackground;
    private javax.swing.JLabel lblHoneydrew;
    private javax.swing.JLabel lblHonydewMt;
    private javax.swing.JLabel lblMango;
    private javax.swing.JLabel lblMangomt;
    private javax.swing.JLabel lblMatcha;
    private javax.swing.JLabel lblMatchaMt;
    private javax.swing.JLabel lblTaro;
    private javax.swing.JLabel lblTaroMt;
    private javax.swing.JLabel lblbrownSugar;
    private javax.swing.JRadioButton rbBrownSugar;
    private javax.swing.JRadioButton rbHoneydew;
    private javax.swing.JRadioButton rbMango;
    private javax.swing.JRadioButton rbMatcha;
    private javax.swing.JRadioButton rbTaro;
    private javax.swing.JSpinner spinnerQuantity;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public void enableTextField(boolean t) {
        txtName.setEnabled(t);
        spinnerQuantity.setEnabled(t);
        cboxSugarLevel.setEnabled(t);
        cboxSize.setEnabled(t);
        btnBuy.setEnabled(t);
        cboxAddOns.setEnabled(t);
    }

    public void toBuy() {
        
        String name = txtName.getText();
        int quantity = (int) spinnerQuantity.getValue();

        if (name.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Name is empty", "Error", JOptionPane.ERROR_MESSAGE);
            txtName.setText("");
            } else {
            if( quantity <= 0){
                JOptionPane.showMessageDialog(this, "Invalid Quantity", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                
                int select = JOptionPane.showConfirmDialog(this, "Are you sure you want to buy this?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (select == 0) {
                    
                    System.out.println("name is " + name +"\n" + "quantity is " + quantity); //name and quantity
                    int sugarLevelPrice = getSugarLevelPrice();
                    System.out.println("Sugar level price : "+ sugarLevelPrice); //Sugar level price depends sa percent
                    System.out.println("Sugar level percentage : "+ sugarLevelPercent); // percentage sang sugar level
                    int sizePrice = getPriceMilkTea();
                    System.out.println("Milk Tea price : " + sizePrice); // Price sang milktea
                    System.out.println("Milk Tea name: "+ milkTeaName); //Name sang milkTea
                    System.out.println(milkTeaName + " Size : " + sizeName); // Size name sang milkTea, Either [Regular, Medium, Large]
                    int addOnsPrice = getPriceaddOns();
                    System.out.println("Add ons price : "+ addOnsPrice); // Price sang Add Ons
                    System.out.println("Add ons name : "+ addOnsName); // Name sang Add Ons

                    
                    int totalAmount = (getPriceMilkTea() * quantity)+getSugarLevelPrice() + getPriceaddOns();
                    System.out.println("Total Amount : " + totalAmount); // Total Amount
                    
                    //JOptionPane.showMessageDialog(this, "Thanks for your order " + name + "!");
                    
                    
                    new EnterCash(totalAmount, name, quantity, sugarLevelPrice, sugarLevelPercent, sizePrice, milkTeaName, sizeName, addOnsName, addOnsPrice).setVisible(true);
                    
                    }
            }
        }
    }
    
    
    //for Image scaler and to select only one radio button
        public void scalerIMGBtngrp(){
        imageScaler.stretchImage(lblbrownSugar);
        imageScaler.stretchImage(lblHoneydrew);
        imageScaler.stretchImage(lblMango);
        imageScaler.stretchImage(lblMatcha);
        imageScaler.stretchImage(lblTaro);

        buttonGroup = new ButtonGroup();
        buttonGroup.add(rbBrownSugar);
        buttonGroup.add(rbTaro);
        buttonGroup.add(rbMango);
        buttonGroup.add(rbHoneydew);
        buttonGroup.add(rbMatcha);
    }
    
        /* create sang connection sa database
    public void createConnection(){
        String url = "jdbc:mysql://localhost:3306/milkteashop";
        String username = "root";
        String password = "Leo11784692842@";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(url, username, password);
            System.out.println("Ka connect kana sa db mango");
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }*/
    
    
    public int getPriceMilkTea(){
        
        int price = 0;
        
        String selectedSize = (String) cboxSize.getSelectedItem();
        
        ArrayList<Integer> BrownSugar = new ArrayList<>();
        BrownSugar.add(40);
        BrownSugar.add(60);
        BrownSugar.add(85);
        
        ArrayList<Integer> Taro = new ArrayList<>();
        Taro.add(50);
        Taro.add(65);
        Taro.add(80);
        
        ArrayList<Integer> Mango = new ArrayList<>();
        Mango.add(55);
        Mango.add(70);
        Mango.add(90);
        
        ArrayList<Integer> HoneyDew = new ArrayList<>();
        HoneyDew.add(60);
        HoneyDew.add(85);
        HoneyDew.add(95);
        
        ArrayList<Integer> Matcha = new ArrayList<>();
        Matcha.add(45);
        Matcha.add(65);
        Matcha.add(80);
        
        
        if(rbBrownSugar.isSelected() == true){
            milkTeaName = "Brown Sugar";
            if(selectedSize.equals("Regular")){
                sizeName = "Regular";
             price = BrownSugar.get(0);
            } else if(selectedSize.equals("Medium")){
                sizeName = "Medium";
                price = BrownSugar.get(1);
            }else if(selectedSize.equals("Large")){
                sizeName = "Large";
                price = BrownSugar.get(2);
            }
            
        } else if(rbTaro.isSelected() == true){
            milkTeaName = "Taro";
            if(selectedSize.equals("Regular")){
                sizeName = "Regular";
                price = Taro.get(0);
            } else if(selectedSize.equals("Medium")){
                sizeName = "Medium";
                price = Taro.get(1);
            }else if(selectedSize.equals("Large")){
                sizeName = "Large";
                price = Taro.get(2);
            }
            
        } else if(rbMango.isSelected() == true){
            milkTeaName = "Mango";
            if(selectedSize.equals("Regular")){
                sizeName = "Regular";
                price = Mango.get(0);
            } else if(selectedSize.equals("Medium")){
                sizeName = "Medium";
                price = Mango.get(1);
            }else if(selectedSize.equals("Large")){
                sizeName = "Large";
                price = Mango.get(2);
            }
            
        } else if(rbHoneydew.isSelected() == true){
            milkTeaName = "Hodey Dew";
            if(selectedSize.equals("Regular")){
                sizeName = "Regular";
                price = HoneyDew.get(0);
            } else if(selectedSize.equals("Medium")){
                sizeName = "Medium";
                price = HoneyDew.get(1);
            }else if(selectedSize.equals("Large")){
                sizeName = "Large";
                price = HoneyDew.get(2);
            }
            
        } else if(rbMatcha.isSelected() == true){
            milkTeaName = "Matcha";
            if(selectedSize.equals("Regular")){
                sizeName = "Regular";
                price = Matcha.get(0);
            } else if(selectedSize.equals("Medium")){
                sizeName = "Medium";
                price = Matcha.get(1);
            }else if(selectedSize.equals("Large")){
                sizeName = "Large";
                price = Matcha.get(2);
            }
            
        }
        return price;
    }
    

    public int getSugarLevelPrice(){
        ArrayList<Integer> sugarLevelPrice = new ArrayList<>();
        sugarLevelPrice.add(5);
        sugarLevelPrice.add(10);
        sugarLevelPrice.add(15);
        sugarLevelPrice.add(20);
        
        String selectedSL = (String) cboxSugarLevel.getSelectedItem();
        
        int priceOfMT = 0;
        
        if(selectedSL.equals("0 %")){
            sugarLevelPercent = "0 %";
            priceOfMT = 0;
        }else if(selectedSL.equals("25 %")){
            sugarLevelPercent = "25 %";
            priceOfMT = sugarLevelPrice.get(0);
        }else if(selectedSL.equals("50 %")){
            sugarLevelPercent = "50 %";
            priceOfMT = sugarLevelPrice.get(1);
        }else if(selectedSL.equals("75 %")){
            sugarLevelPercent = "75 %";
            priceOfMT = sugarLevelPrice.get(2);
        }else if(selectedSL.equals("100 %")){
            sugarLevelPercent = "100 %";
            priceOfMT = sugarLevelPrice.get(3);
        }
            
            
        return priceOfMT; 
    }
    
    
    public int getPriceaddOns(){
        
        String selectedAddOns = (String) cboxAddOns.getSelectedItem();
        
        ArrayList<Integer> AddOnsPrice = new ArrayList<>();
        AddOnsPrice.add(10);
        AddOnsPrice.add(15);
        AddOnsPrice.add(15);
        AddOnsPrice.add(15);
        AddOnsPrice.add(10);
        
        int price = 0;
        
        
        
        if(selectedAddOns.equals("None")){
            addOnsName = "None";
            price = 0;
        } else if(selectedAddOns.equals("Pearls/Tapioca")){
            addOnsName = "Pearls/Tapioca";
            price = AddOnsPrice.get(0);
        } else if(selectedAddOns.equals("Crushed Oreo")){
            addOnsName = "Crushed Oreo";
            price = AddOnsPrice.get(1);
        } else if(selectedAddOns.equals("Nata de coco")){
            addOnsName = "Nata de coco";
            price = AddOnsPrice.get(2);
        } else if(selectedAddOns.equals("Chocolate Pudding")){
            addOnsName = "Chocolate Pudding";
            price = AddOnsPrice.get(3);
        } else if(selectedAddOns.equals("Coconut Jelly")){
            addOnsName = "Coconut Jelly";
            price = AddOnsPrice.get(4);
        }
         
        return price;
    }
}
